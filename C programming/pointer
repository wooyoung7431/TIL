#include <stdio.h>
void swap(int a, int b);
void swap_addr(int *a, int *b);
void changeArry(int* ptr);
int main(void)
{

	////포인터

	////[철수] 101호 ->메모리공간의 주소
	////[영희] 201호
	////[민수] 301호
	////각 문 앞에 '암호'가 걸려 있음
	//int a = 1; //암호
	//int b = 2;
	//int c = 3;

	//printf("철수네 주소:%d,암호%d\n", &a, a);
	//printf("영희네 주소:%d,암호%d\n", &b, b);
	//printf("민수네 주소:%d,암호%d\n", &c, c);

	////미션맨

	////첫 번째 미션: 아파트의 각 집에 방문하여 문에 적힌 암호 확인
	//int *미션맨;//포인터 변수
	//미션맨 = &a;
	//printf("미션맨이 방문하는 곳 주소:%d\n,암호;%d\n",미션맨,*미션맨);
	//
	//미션맨 = &b;
	//printf("미션맨이 방문하는 곳 주소:%d\n,암호;%d\n",미션맨,*미션맨);

	//미션맨 = &c;
	//printf("미션맨이 방문하는 곳 주소:%d\n,암호;%d\n",미션맨,*미션맨);

	////두 번쨰 미션: 각 암호에 3을 곱해라
	//미션맨 = &a;
	//*미션맨 = *미션맨 * 3;
	//printf("미션맨이 방문하는 곳 주소:%d\n,암호;%d\n", 미션맨, *미션맨);

	//미션맨 = &b;
	//*미션맨 = *미션맨 * 3;
	//printf("미션맨이 방문하는 곳 주소:%d\n,암호;%d\n", 미션맨, *미션맨);

	//미션맨 = &c;
	//*미션맨 = *미션맨 * 3;
	//printf("미션맨이 방문하는 곳 주소:%d\n,암호;%d\n", 미션맨, *미션맨);

	////스파이
	////미션맨이 바꾼 암호에서 2를 빼라!
	//int* 스파이 = 미션맨;
	//printf("\n\n...스파이가 미션 수행하는 중...\n\n");
	//스파이 = &a;
	//*스파이 = *스파이 - 2;
	//printf("미션맨이 방문하는 곳 주소:%d\n,암호;%d\n", 스파이, *스파이);

	//스파이 = &b;
	//*스파이 = *스파이 - 2;
	//printf("미션맨이 방문하는 곳 주소:%d\n,암호;%d\n", 스파이, *스파이);

	//스파이 = &c;
	//*스파이 = *스파이 - 2;
	//printf("미션맨이 방문하는 곳 주소:%d\n,암호;%d\n", 스파이, *스파이);


	//printf("\n\n\n...철수 영희 민수는 집에 오고서는 바뀐 암호를 보고 깜놀...\n\n\n");

	//printf("철수네 주소:%d,암호%d\n", &a, a);
	//printf("영희네 주소:%d,암호%d\n", &b, b);
	//printf("민수네 주소:%d,암호%d\n", &c, c);

	////참고로 미션맨이 사는 곳의 주소는...&미션맨으로 확인
	//printf("미션맨의 주소:%d\n", &미션맨);
	//printf("미션맨의 주소:%d\n", &스파이);

	//배열?
	//int arr[3] = { 5,10,15 };
	//int* ptr = arr;
	//for (int i = 0; i < 3; i++)
	//{
	//	printf("배열 arr[%d]의 값:%d\n", i, arr[i]);

	//}
	//for (int i = 0; i < 3; i++)
	//{
	//	printf("포인터 ptr[%d]의 값 : % d", i, ptr[i]);

	//}
	//ptr[0] = 100;
	//ptr[1] = 200;
	//ptr[2] = 300;
	//for (int i = 0; i < 3; i++)
	//{
	//	//printf("배열 arr[%d]의 값:%d\n", i, arr[i]);
	//	printf("배열 arr[%d]의 값:%d\n", i, *(arr + i));
	//}
	//for (int i = 0; i < 3; i++)
	//{
	//	//printf("포인터 ptr[%d]의 값 : % d", i, ptr[i]);
	//	printf("배열 arr[%d]의 값:%d\n", i, *(ptr + i));
	//}
	////*(arr+i)==arr[i] 똑같은 표현
	////arr ==arr배열의 첫번째 값의 주소와 동일 ==&arr[0]
	//printf("arr자체의 값:%d\n", arr);
	//printf("arr[0]의 주소:%d\n", &arr[0]);

	//printf("arr 자체의 값이 가지는 주소의 실제 값:%d\n", *arr); //*(arr+0)
	//printf("arr[0]의 실제 값:%d\n", *&arr[0]);

	////*&는 아무것도 없는 것과 같다 &는 주소이며,*는 그 주소의 값이기 떄문에
	////*&는 상쇄된다

	//SWAP
	//int a = 10;
	//int b = 20;
	//printf("a의 주소:%d", &a);
	//printf("b의 주소:%d", &b);
	////a와b의 값을 바꾼다
	//printf("Swap함수 전=>a:%d,b=%d\n", a, b);
	//swap(a, b);
	//printf("Swap함수 후=>a:%d,b=%d\n", a, b);

	////값에 의한 복사 (Call By Value)->값만 복사한다는 의미

	////주소값을 넘기면?메모리 공간에 있는 주소값 자체를 넘기면 철수네처럼
	//printf("(주소값 전달)Swap함수 전=>a:%d,b=%d\n", a, b);
	//swap_addr(&a, &b);
	//printf("(주소값 전달)Swap함수 후=>a:%d,b=%d\n", a, b);
	//배열일 떄 arr2->주소
	int arr2[3] = { 10,20,30 };
	//changeArry(arr2);
	changeArry(&arr2[0]);
	for (int i = 0; i < 3; i++)
	{
		printf("%d\n", arr2[i]);
	}
	//scanf에서 &num과 같이&를 사용하는 이유?

	return 0;

}

void swap(int a, int b)
{
	printf("(swap함수내)a의 주소:%d\n", &a);
	printf("(swap함수내)b의 주소:%d\n", &b);
	int temp = a;
	a = b;
	b = temp;
	printf("(주소값 전달)Swap함수 내=>a:%d,b=%d\n", a, b);
}

void swap_addr(int* a, int* b)
{

	int temp = *a;
	*a = *b;
	*b = temp;
	printf("(주소값 전달)Swap함수 내=>a:%d,b=%d\n", *a, *b);
}

void changeArry(int* ptr)
{
	ptr[2] = 50;
}
